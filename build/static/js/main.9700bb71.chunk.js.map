{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","request","put","console","log","Notification","message","className","Person","person","setPersons","persons","setErrorMessage","name","number","onClick","window","confirm","personService","filter","human","setTimeout","Persons","filtered","toUpperCase","includes","showPersons","map","PersonForm","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","personObject","names","returnedPerson","concat","catch","error","indexOf","find","p","changedPerson","value","onChange","target","type","Filter","setFilter","App","useState","errorMessage","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"iNAEMA,EAAU,cA+BDC,EAPQ,CACnBC,OAvBW,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAsBzCC,OAnBW,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBzCI,OAdW,SAAAC,GAEX,OADgBT,IAAMU,OAAN,UAAgBb,EAAhB,YAA2BY,IAC5BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAazCO,OAVW,SAACF,EAAIH,GAChB,IAAMM,EAAUZ,IAAMa,IAAN,UAAahB,EAAb,YAAwBY,GAAMH,GAE9C,OADAQ,QAAQC,IAAIT,GACLM,EAAQV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,OCT9BY,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,KCLDE,EAAS,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAgB7C,OACE,gCACGH,EAAOI,KADV,IACiBJ,EAAOK,OACtB,wBAAQC,QAjBS,WACfC,OAAOC,QAAP,iBAAyBR,EAAOI,KAAhC,QACFK,EACGrB,OAAOY,EAAOX,IACjBY,EAAWC,EAAQQ,QAAO,SAAAC,GAAK,OAAIA,EAAMtB,KAAOW,EAAOX,QAEzDc,EAAgB,WAAD,OACFH,EAAOI,OAEpBQ,YAAW,WACTT,EAAgB,QACf,MAMD,wBAOAU,EAAU,SAAC,GAAsD,IAApDH,EAAmD,EAAnDA,OAAQR,EAA2C,EAA3CA,QAASD,EAAkC,EAAlCA,WAAYE,EAAsB,EAAtBA,gBAExCW,EAAWZ,EAAQQ,QAAO,SAAAV,GAAM,OAAIA,EAAOI,KAAKW,cAAcC,SAASN,EAAOK,kBAC9EE,EAAyB,KAAXP,EAAgBR,EAAUY,EAE9C,OACE,8BACGG,EAAYC,KAAI,SAAAlB,GAAM,OACrB,cAAC,EAAD,CAA0BA,OAAQA,EAAQC,WAAYA,EAAYC,QAASA,EAASC,gBAAiBA,GAAxFH,EAAOI,YAOtBe,EAAa,SAAC,GAA4F,IAA1FjB,EAAyF,EAAzFA,QAASkB,EAAgF,EAAhFA,QAASC,EAAuE,EAAvEA,WAAYC,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,aAActB,EAAkC,EAAlCA,WAAYE,EAAsB,EAAtBA,gBA+DvF,OACE,uBAAMqB,SA9DU,SAACC,GACjBA,EAAMC,iBACN,IAAMC,EAAe,CACnBvB,KAAMgB,EACNf,OAAQiB,GAGJM,EAAQ1B,EAAQgB,KAAI,SAAAlB,GAAM,OAAIA,EAAOI,QAE3C,IAAgC,IAA5BwB,EAAMZ,SAASI,GACjBX,EACGxB,OAAO0C,GACP7C,MAAK,SAAA+C,GACJ5B,EAAWC,EAAQ4B,OAAOD,OAE3BE,OAAM,SAAAC,GACL7B,EAAgB6B,EAAMjD,SAASC,KAAKgD,UAExC7B,EAAgB,SAAD,OACJiB,IAEXR,YAAW,WACTT,EAAgB,QACf,UAGA,GAAII,OAAOC,QAAP,UAAkBY,EAAlB,2EAAoG,CAE3G,IAAM/B,EAAKuC,EAAMK,QAAQb,GAAW,EAC9BpB,EAASE,EAAQgC,MAAK,SAAAC,GAAC,OAAI9C,IAAO8C,EAAE9C,MACpC+C,EAAa,2BAAQpC,GAAR,IAAgBK,OAAQiB,IAE3Cb,EACGlB,OAAOF,EAAI+C,GACXtD,MAAK,SAAA+C,GACJ5B,EAAWC,EAAQgB,KAAI,SAAAlB,GAAM,OAAIA,EAAOX,KAAOA,EAAKW,EAAS6B,SAEjE1B,EAAgB,WAAD,OACFiB,EADE,eAGfR,YAAW,WACTT,EAAgB,QACf,KAILkB,EAAW,IACXE,EAAa,KAeb,UACE,yCACQ,uBACJc,MAAOjB,EACPkB,SAdiB,SAACb,GACxBJ,EAAWI,EAAMc,OAAOF,aAgBtB,2CACU,uBACNA,MAAOf,EACPgB,SAhBmB,SAACb,GAC1BF,EAAaE,EAAMc,OAAOF,aAkBxB,8BACE,wBAAQG,KAAK,SAAb,uBAQFC,EAAS,SAAC,GAA2B,IAAzB/B,EAAwB,EAAxBA,OAAQgC,EAAgB,EAAhBA,UAOxB,OACE,qDACoB,uBAChBL,MAAO3B,EACP4B,SARqB,SAACb,GAC1BiB,EAAUjB,EAAMc,OAAOF,cAwDZM,EAzCH,WACV,MAA8BC,mBAAS,IAAvC,mBAAO1C,EAAP,KAAgBD,EAAhB,KACA,EAA8B2C,mBAAS,IAAvC,mBAAOxB,EAAP,KAAgBC,EAAhB,KACA,EAAkCuB,mBAAS,IAA3C,mBAAOtB,EAAP,KAAkBC,EAAlB,KACA,EAA4BqB,mBAAS,IAArC,mBAAOlC,EAAP,KAAegC,EAAf,KACA,EAAwCE,mBAAS,MAAjD,mBAAOC,EAAP,KAAqB1C,EAArB,KAcA,OAXA2C,qBAAU,WACRrC,EACG9B,SACAG,MAAK,SAAAiE,GACJ9C,EAAW8C,QAEd,IAMD,gCACE,2CAEA,cAAC,EAAD,CAAclD,QAASgD,IAGvB,cAAC,EAAD,CAAQ3C,QAASA,EAASwC,UAAWA,EAAWhC,OAAQA,IACxD,2CAEA,cAAC,EAAD,CAAYP,gBAAiBA,EAAiBD,QAASA,EAASkB,QAASA,EAASC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,EAActB,WAAYA,IAExK,yCACA,cAAC,EAAD,CAASC,QAASA,EAASQ,OAAQA,EAAQT,WAAYA,EAAYE,gBAAiBA,QClL1F6C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9700bb71.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    console.log(newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst exportedObject = {\r\n    getAll,\r\n    create,\r\n    remove,\r\n    update\r\n};\r\n\r\nexport default exportedObject;","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst Person = ({ person, setPersons, persons, setErrorMessage }) => {\n\n  const clickhandler = () => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(person.id)\n      setPersons(persons.filter(human => human.id !== person.id))\n    }\n    setErrorMessage(\n      `Removed ${person.name}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n\n  }\n  return (\n    <div>\n      {person.name} {person.number}\n      <button onClick={clickhandler}>Delete\n      </button>\n    </div>\n  )\n}\n\n\nconst Persons = ({ filter, persons, setPersons, setErrorMessage }) => {\n\n  const filtered = persons.filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))\n  const showPersons = filter === \"\" ? persons : filtered;\n\n  return (\n    <div>\n      {showPersons.map(person =>\n        <Person key={person.name} person={person} setPersons={setPersons} persons={persons} setErrorMessage={setErrorMessage} />\n      )}\n    </div>\n  )\n}\n\n\nconst PersonForm = ({ persons, newName, setNewName, newNumber, setNewNumber, setPersons, setErrorMessage }) => {\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const names = persons.map(person => person.name)\n\n    if (names.includes(newName) === false) {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n        })\n      setErrorMessage(\n        `Added ${newName}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n\n    }\n    else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n      const id = names.indexOf(newName) + 1\n      const person = persons.find(p => id === p.id)\n      const changedPerson = { ...person, number: newNumber }\n\n      personService\n        .update(id, changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n        })\n      setErrorMessage(\n        `Changed ${newName}'s number'`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n\n\n    setNewName(\"\")\n    setNewNumber(\"\")\n\n\n\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>)\n\n}\n\n\n\nconst Filter = ({ filter, setFilter }) => {\n\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      filter shown with <input\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  )\n}\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} />\n\n\n      <Filter persons={persons} setFilter={setFilter} filter={filter} />\n      <h2>add a new</h2>\n\n      <PersonForm setErrorMessage={setErrorMessage} persons={persons} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} setPersons={setPersons} />\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} setPersons={setPersons} setErrorMessage={setErrorMessage} />\n\n    </div>\n  )\n\n}\n\n\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}